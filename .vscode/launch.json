{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [

        {
            "name": "Debug Unit Test",
            "type": "python",
            "request": "launch",
            "justMyCode": false,
            "program": "${file}",
            "purpose": ["debug-test"],
            "console": "integratedTerminal",
            "env": {
                // The default config in setup.cfg's "[tool:pytest]" adds coverage.
                // Cannot have coverage and debugging at the same time.
                // https://github.com/microsoft/vscode-python/issues/693
                "PYTEST_ADDOPTS": "--no-cov"
            },
        },
        {
            "name": "ADCore Convert asynNDArrayDriver",
            "type": "python",
            "request": "launch",
            "justMyCode": false,
            "program": "${workspaceFolder:pvi}/src/pvi",
            "args": [
                "convert",
                "asyn",
                "${workspaceFolder:ADCore}",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/ADSrc/asynNDArrayDriver.cpp",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/ADSrc/asynNDArrayDriver.h",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/Db/NDArrayBase.template",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/Db/NDFile.template",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "ADCore Convert ADDriver",
            "type": "python",
            "request": "launch",
            "justMyCode": false,
            "program": "${workspaceFolder:pvi}/src/pvi",
            "args": [
                "convert",
                "asyn",
                "${workspaceFolder:ADCore}",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/ADSrc/ADDriver.cpp",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/ADSrc/ADDriver.h",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/Db/ADBase.template",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "ADCore Convert NDPluginDriver",
            "type": "python",
            "request": "launch",
            "justMyCode": false,
            "program": "${workspaceFolder:pvi}/src/pvi",
            "args": [
                "convert",
                "asyn",
                "${workspaceFolder:ADCore}",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/pluginSrc/NDPluginDriver.cpp",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/pluginSrc/NDPluginDriver.h",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/Db/NDPluginBase.template",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "ADCore Convert NDPluginFile",
            "type": "python",
            "request": "launch",
            "justMyCode": false,
            "program": "${workspaceFolder:pvi}/src/pvi",
            "args": [
                "convert",
                "asyn",
                "${workspaceFolder:ADCore}",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/pluginSrc/NDPluginFile.cpp",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/pluginSrc/NDPluginFile.h",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "ADCore Convert NDFileHDF5",
            "type": "python",
            "request": "launch",
            "justMyCode": false,
            "program": "${workspaceFolder:pvi}/src/pvi",
            "args": [
                "convert",
                "asyn",
                "${workspaceFolder:ADCore}",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/pluginSrc/NDFileHDF5.cpp",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/pluginSrc/NDFileHDF5.h",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADCore/ADApp/Db/NDFileHDF5.template",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Convert Pilatus",
            "type": "python",
            "request": "launch",
            "justMyCode": false,
            "program": "${workspaceFolder:pvi}/src/pvi",
            "args": [
                "convert",
                "asyn",
                "${workspaceFolder:ADPilatus}",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADPilatus/pilatusApp/src/pilatusDetector.cpp",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADPilatus/pilatusApp/src/pilatusDetector.cpp",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADPilatus/pilatusApp/Db/pilatus.template",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Convert ADSimDetector",
            "type": "python",
            "request": "launch",
            "justMyCode": false,
            "program": "${workspaceFolder:pvi}/src/pvi",
            "args": [
                "convert",
                "asyn",
                "${workspaceFolder:ADSimDetector}",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADSimDetector/simDetectorApp/src/simDetector.cpp",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADSimDetector/simDetectorApp/src/simDetector.h",
                "${workspaceFolder:pvi}/src/pvi/submodules/ADSimDetector/simDetectorApp/Db/simDetector.template",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Produce",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder:pvi}/src/pvi",
            "args": [
                "produce",
                "${workspaceFolder:pvi}/../${input:Module}/pvi/${input:Driver}${input:FileType}",
                "${workspaceFolder:pvi}/../${input:Module}/pvi/${input:Driver}.pvi.producer.yaml",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Write Schema",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder:pvi}/src/pvi",
            "args": [
                "schema",
                "${workspaceFolder:pvi}/schemas/pvi.producer.schema.json"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "simDetector IOC",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder:ADSimDetector}/iocs/simDetector/bin/linux-x86_64/simDetector",
            "args": [
                "stsimDetector.boot"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder:ADSimDetector}/iocs/simDetector/bin/linux-x86_64",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
    ],
    "inputs": [
        {
          "id": "Module",
          "description": "Which Module?",
          "type": "pickString",
          "options": [
            "ADCore",
            "ADPilatus",
            "ADSimDetector",
          ],
        },
        {
          "id": "Driver",
          "description": "Which Driver?",
          "type": "pickString",
          "options": [
            "asynNDArrayDriver",
            "ADDriver",
            "NDPluginDriver",
            "NDPluginFile",
            "NDFileHDF5",
            "pilatusDetector",
            "simDetector",
          ],
        },
        {
          "id": "FileType",
          "description": "What file to produce?",
          "type": "pickString",
          "options": [
            "ParamSet.h",
            "Parameters.template",
            ".pvi.device.yaml",
          ],
        },
    ]
}
