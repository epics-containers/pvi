# {py:mod}`pvi._format.aps`

```{py:module} pvi._format.aps
```

```{autodoc2-docstring} pvi._format.aps
:allowtitles:
```

## Module Contents

### Classes

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`APSFormatter <pvi._format.aps.APSFormatter>`
  -
````

### API

`````{py:class} APSFormatter(/, **data: typing.Any)
:canonical: pvi._format.aps.APSFormatter

Bases: {py:obj}`pvi._format.base.Formatter`

````{py:attribute} spacing
:canonical: pvi._format.aps.APSFormatter.spacing
:type: typing.Annotated[int, Field(description='Spacing between widgets')]
:value: >
   5

```{autodoc2-docstring} pvi._format.aps.APSFormatter.spacing
```

````

````{py:attribute} title_height
:canonical: pvi._format.aps.APSFormatter.title_height
:type: typing.Annotated[int, Field(description='Height of screen title bar')]
:value: >
   25

```{autodoc2-docstring} pvi._format.aps.APSFormatter.title_height
```

````

````{py:attribute} max_height
:canonical: pvi._format.aps.APSFormatter.max_height
:type: typing.Annotated[int, Field(description='Max height of the screen')]
:value: >
   900

```{autodoc2-docstring} pvi._format.aps.APSFormatter.max_height
```

````

````{py:attribute} label_width
:canonical: pvi._format.aps.APSFormatter.label_width
:type: typing.Annotated[int, Field(description='Width of the widget description labels')]
:value: >
   205

```{autodoc2-docstring} pvi._format.aps.APSFormatter.label_width
```

````

````{py:attribute} widget_width
:canonical: pvi._format.aps.APSFormatter.widget_width
:type: typing.Annotated[int, Field(description='Width of the widgets')]
:value: >
   100

```{autodoc2-docstring} pvi._format.aps.APSFormatter.widget_width
```

````

````{py:attribute} widget_height
:canonical: pvi._format.aps.APSFormatter.widget_height
:type: typing.Annotated[int, Field(description='Height of the widgets')]
:value: >
   20

```{autodoc2-docstring} pvi._format.aps.APSFormatter.widget_height
```

````

````{py:method} format(device: pvi.device.Device, path: pathlib.Path) -> None
:canonical: pvi._format.aps.APSFormatter.format

````

`````
