# This file was automatically generated
# *** Please do not edit this file: edit the source file instead. ***

# Group: ComponentGroupOne
record(bo, "$(P)$(R)ResetPower")
{
    field(DESC, "ResetPower")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RESET_POWER")
    field(ZNAM, "Done")
    field(ONAM, "Reset")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ResetPower.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(busy, "$(P)$(R)ThresholdApply")
{
    field(DESC, "ThresholdApply")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))THRESHOLD_APPLY")
    field(ONAM, "Apply")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ThresholdApply.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)ImageFileTmot")
{
    field(DESC, "Timeout for image file")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "20")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_FILE_TMOT")
    field(PREC, "3")
    field(EGU,  "s")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ImageFileTmot.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Wavelength")
{
    field(DESC, "Wavelength")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "1.54")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WAVELENGTH")
    field(PREC, "4")
    field(EGU,  "Angstroms")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Wavelength.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)EnergyLow")
{
    field(DESC, "EnergyLow")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ENERGY_LOW")
    field(PREC, "3")
    field(EGU,  "eV")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)EnergyLow.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)EnergyHigh")
{
    field(DESC, "EnergyHigh")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ENERGY_HIGH")
    field(PREC, "3")
    field(EGU,  "eV")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)EnergyHigh.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)DetDist")
{
    field(DESC, "DetDist")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "1000")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DET_DIST")
    field(PREC, "3")
    field(EGU,  "mm")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)DetDist.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)DetVOffset")
{
    field(DESC, "DetVOffset")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DET_VOFFSET")
    field(PREC, "3")
    field(EGU,  "mm")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)DetVOffset.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)BeamX")
{
    field(DESC, "BeamX")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BEAM_X")
    field(PREC, "3")
    field(EGU,  "pixels")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)BeamX.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)BeamY")
{
    field(DESC, "BeamY")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BEAM_Y")
    field(PREC, "3")
    field(EGU,  "pixels")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)BeamY.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Flux")
{
    field(DESC, "Flux")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FLUX")
    field(PREC, "4")
    field(EGU,  "ph/s")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Flux.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)FilterTransm")
{
    field(DESC, "FilterTransm")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "1.0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILTER_TRANSM")
    field(PREC, "4")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)FilterTransm.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)StartAngle")
{
    field(DESC, "StartAngle")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))START_ANGLE")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)StartAngle.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)AngleIncr")
{
    field(DESC, "AngleIncr")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0.1")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ANGLE_INCR")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)AngleIncr.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Det2theta")
{
    field(DESC, "Det2theta")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DET_2THETA")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Det2theta.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Polarization")
{
    field(DESC, "Polarization")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0.99")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))POLARIZATION")
    field(PREC, "4")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Polarization.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Alpha")
{
    field(DESC, "Alpha")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ALPHA")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Alpha.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Kappa")
{
    field(DESC, "Kappa")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAPPA")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Kappa.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Phi")
{
    field(DESC, "Phi")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PHI")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Phi.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)PhiIncr")
{
    field(DESC, "PhiIncr")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0.1")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PHI_INCR")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)PhiIncr.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Chi")
{
    field(DESC, "Chi")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CHI")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Chi.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)ChiIncr")
{
    field(DESC, "ChiIncr")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0.1")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CHI_INCR")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ChiIncr.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Omega")
{
    field(DESC, "Omega")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OMEGA")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Omega.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)OmegaIncr")
{
    field(DESC, "OmegaIncr")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0.1")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OMEGA_INCR")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)OmegaIncr.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(stringout, "$(P)$(R)OscillAxis")
{
    field(DESC, "OscillAxis")
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(VAL,  "X, CW")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OSCILL_AXIS")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)OscillAxis.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(longout, "$(P)$(R)NumOscill")
{
    field(DESC, "NumOscill")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "1")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NUM_OSCILL")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)NumOscill.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(waveform, "$(P)$(R)BadPixelFile")
{
    field(DESC, "BadPixelFile")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BAD_PIXEL_FILE")
    field(NELM, "256")
    field(FTVL, "CHAR")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)BadPixelFile.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(waveform, "$(P)$(R)FlatFieldFile")
{
    field(DESC, "FlatFieldFile")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FLAT_FIELD_FILE")
    field(NELM, "256")
    field(FTVL, "CHAR")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)FlatFieldFile.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(waveform, "$(P)$(R)CbfTemplateFile")
{
    field(DESC, "CbfTemplateFile")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CBFTEMPLATEFILE")
    field(NELM, "256")
    field(FTVL, "CHAR")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)CbfTemplateFile.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(waveform, "$(P)$(R)HeaderString")
{
    field(DESC, "HeaderString")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HEADERSTRING")
    field(NELM, "68")
    field(FTVL, "CHAR")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)HeaderString.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(bi, "$(P)$(R)Armed")
{
    field(DESC, "Armed")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARMED")
    field(ZNAM, "Unarmed")
    field(ONAM, "Armed")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Armed.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(longin, "$(P)$(R)NumBadPixels")
{
    field(DESC, "Number of bad pixels")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NUM_BAD_PIXELS")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)NumBadPixels.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(bi, "$(P)$(R)FlatFieldValid")
{
    field(DESC, "Flat field valid")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FLAT_FIELD_VALID")
    field(ZNAM, "No")
    field(ONAM, "Yes")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)FlatFieldValid.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)PixelCutOff_RBV")
{
    field(DESC, "PixelCutOff_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PIXEL_CUTOFF")
    field(EGU,  "counts")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)PixelCutOff_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)Temp0_RBV")
{
    field(DESC, "Temp0_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TH_TEMP_0")
    field(PREC, "1")
    field(EGU,  "C")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Temp0_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)Temp1_RBV")
{
    field(DESC, "Temp1_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TH_TEMP_1")
    field(PREC, "1")
    field(EGU,  "C")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Temp1_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)Temp2_RBV")
{
    field(DESC, "Temp2_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TH_TEMP_2")
    field(PREC, "1")
    field(EGU,  "C")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Temp2_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)Humid0_RBV")
{
    field(DESC, "Humid0_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TH_HUMID_0")
    field(PREC, "1")
    field(EGU,  "%")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Humid0_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)Humid1_RBV")
{
    field(DESC, "Humid1_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TH_HUMID_1")
    field(PREC, "1")
    field(EGU,  "%")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Humid1_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)Humid2_RBV")
{
    field(DESC, "Humid2_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TH_HUMID_2")
    field(PREC, "1")
    field(EGU,  "%")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Humid2_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(stringin, "$(P)$(R)TVXVersion_RBV")
{
    field(DESC, "TVXVersion_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TVXVERSION")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)TVXVersion_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(longin, "$(P)$(R)ResetPowerTime_RBV")
{
    field(DESC, "Reset module power wait time")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RESET_POWER_TIME")
    field(EGU,  "Seconds")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ResetPowerTime_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(longout, "$(P)$(R)ResetPowerTime")
{
    field(DESC, "Reset module power wait time")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "1")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RESET_POWER_TIME")
    field(EGU,  "Seconds")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ResetPowerTime.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)DelayTime_RBV")
{
    field(DESC, "DelayTime")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DELAY_TIME")
    field(PREC, "6")
    field(EGU,  "s")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)DelayTime_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)DelayTime")
{
    field(DESC, "DelayTime")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DELAY_TIME")
    field(PREC, "6")
    field(EGU,  "s")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)DelayTime.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)ThresholdEnergy_RBV")
{
    field(DESC, "Energy threshold")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))THRESHOLD")
    field(PREC, "3")
    field(EGU,  "keV")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ThresholdEnergy_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)ThresholdEnergy")
{
    field(DESC, "Energy threshold")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "10.000")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))THRESHOLD")
    field(PREC, "3")
    field(EGU,  "keV")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ThresholdEnergy.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(bi, "$(P)$(R)ThresholdAutoApply_RBV")
{
    field(DESC, "ThresholdAutoApply")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))THRESHOLD_AUTO_APPLY")
    field(ZNAM, "No")
    field(ONAM, "Yes")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ThresholdAutoApply_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(bo, "$(P)$(R)ThresholdAutoApply")
{
    field(DESC, "ThresholdAutoApply")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "1")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))THRESHOLD_AUTO_APPLY")
    field(ZNAM, "No")
    field(ONAM, "Yes")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ThresholdAutoApply.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)Energy_RBV")
{
    field(DESC, "X-ray Energy")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ENERGY")
    field(PREC, "3")
    field(EGU,  "keV")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Energy_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ao, "$(P)$(R)Energy")
{
    field(DESC, "X-ray Energy")
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(VAL,  "20.000")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ENERGY")
    field(PREC, "3")
    field(EGU,  "keV")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)Energy.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(longin, "$(P)$(R)MinFlatField_RBV")
{
    field(DESC, "Minimum flat field value")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MIN_FLAT_FIELD")
    field(EGU,  "Counts")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)MinFlatField_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(longout, "$(P)$(R)MinFlatField")
{
    field(DESC, "Minimum flat field value")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "100")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MIN_FLAT_FIELD")
    field(EGU,  "Counts")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)MinFlatField.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(mbbi, "$(P)$(R)GapFill_RBV")
{
    field(DESC, "GapFill")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GAP_FILL")
    field(ZRVL, "2")
    field(ONVL, "0")
    field(TWVL, "-1")
    field(ZRST, "N.A.")
    field(ONST, "0")
    field(TWST, "-1")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)GapFill_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(mbbo, "$(P)$(R)GapFill")
{
    field(DESC, "GapFill")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GAP_FILL")
    field(ZRVL, "2")
    field(ONVL, "0")
    field(TWVL, "-1")
    field(ZRST, "N.A.")
    field(ONST, "0")
    field(TWST, "-1")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)GapFill.w": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}

record(ai, "$(P)$(R)ProgressBarTest_RBV")
{
    field(DESC, "ProgressBar")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PROGRESS")
    field(PREC, "4")
    field(EGU,  "deg")
$(PVI=#)    info(Q:group, {
$(PVI=#)        "$(P)$(R):PVI": {
$(PVI=#)            "pvi.$(P)$(R)ProgressBarTest_RBV.r": {
$(PVI=#)                "+channel": "NAME",
$(PVI=#)                "+type": "plain"
$(PVI=#)            }
$(PVI=#)        }
$(PVI=#)    })
}
